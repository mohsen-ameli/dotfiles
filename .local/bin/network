#!/bin/sh
##########################
## Network connectivity information
##########################

print_usage() {
	printf """Usage: network [arguments]
	
arguments:
    --live: \t\t Prints the info for live
    --full: \t\t Shows wifi icon and strength percentage
    --icon: \t\t Shows only the wifi icon
    --info: \t\t Shows all the information
    --status: \t\t Shows the status of the connection
    --strength: \t\t The strength of the network
    --interface: \t\t The interface that the network is connected to
"""
}

status() {
    iwgetid &> /dev/null
    [ $? -eq 0 ] && echo "connected" || echo "disconnected"
}

strength() {
    awk 'NR==3 {printf("%.0f", $3*10/7)}' /proc/net/wireless
}

interface() {
    iwgetid | cut -f1 -d" "
}

# icon [connected] [strength:optional if not connected]
icon() {
    connected=$1
    if [ "$connected" = "disconnected" ]; then
        echo "󰤭"
        exit 0
    fi

    strength=$2
    if [ $strength -ge 75 ]; then
        icon="󰤨"
    elif [ $strength -ge 50 ]; then
        icon="󰤥"
    elif [ $strength -ge 25 ]; then
        icon="󰤢"
    else
        icon="󰤟"
    fi
    echo "$icon"
}

# class [connected] [strength:optional if not connected]
class() {
    connected=$1
    if [ "$connected" = "disconnected" ]; then
        echo "disabled"
        exit 0
    fi

    strength=$2
    if [ $strength -ge 75 ]; then
        class="high"
    elif [ $strength -ge 50 ]; then
        class="mid"
    elif [ $strength -ge 25 ]; then
        class="low"
    else
        class="none"
    fi
    echo "$class"
}

# full [connected] [strength:optional if not connected]
full() {
    connected=$1
    if [ "$connected" = "disconnected" ]; then
        echo "$(icon $strength $connected) 0%"
        exit 0
    fi
    
    strength=$2
    echo "$strength% $(icon $connected $strength)"
}

# info [connected] [strength:optional if not connected]
info() {
    connected=$1
    if [ "$connected" = "disconnected" ]; then
        echo "Disconnected"
        exit 0
    fi

    strength=$2
    essid=$(iwgetid -r)
    ipaddr=$(nmcli device show | grep "^IP4.ADDRESS" | awk 'NR==1 {print $2}' | cut -f1 -d/)
    interface_=$(interface)
    # publicip=$(curl icanhazip.com)

    printf "%s\n" "<tt>ESSID: \\t\\t$essid\\nLocal IP: \\t$ipaddr\\nInterface: \\t$interface_\nStrength: \\t$strength%</tt>"
}

live() {
    while true; do
        status_=$(status)
        strength_=$(strength)
        printf "%s\n" "{\"status\": \"$status_\", \"full\": \"$(full $status_ $strength_)\", \"class\": \"$(class $status_ $strength_)\", \"icon\": \"$(icon $status_ $strength_)\" , \"info\": \"$(info $status_ $strength_)\"}"
        sleep 5
    done
}

if [ "$1" = "--status" ]; then
    status
elif [ "$1" = "--live" ]; then
    live
elif [ "$1" = "--info" ]; then
    info $(status) $(strength)
elif [ "$1" = "--icon" ]; then
    icon $(status) $(strength)
elif [ "$1" = "--full" ]; then
    full $(status) $(strength)
elif [ "$1" = "--strength" ]; then
    strength
elif [ "$1" = "--interface" ]; then
    interface
else
    print_usage
fi
