#!/bin/bash
##########################
## Download a given YouTube playlist.
## Gets the thumbnail, artist, and title of the music.
## Use this if a song's name or title looks funky
## ffmpeg -y -i ".mp3" -metadata title="" -metadata artist="" -metadata album="" a.mp3 && mv -f a.mp3 ".mp3"
## ffmpeg -i album-art.jpg album-art.png
##########################

playlist=$1
folder=$2
artist=$3
album=$4

if [[ $playlist == "" ]] || [[ $folder == "" ]]; then
	echo "Usage: download-yt-playlist <playlist-link> <folder-to-save> <optional:artist> <optional:album>"
	exit 1
elif [[ ! -d $folder ]]; then
	echo "Folder doesn't exist :("
	exit 1
fi

cd $folder
temp=$(echo "temp-$(date +%s)")
mkdir $temp
cd $temp

# Download a playlist 
function download() {
	yt-dlp --write-thumbnail --ignore-errors --format bestaudio --extract-audio --audio-format mp3 --audio-quality 160K --output "%(title)s.%(ext)s" --yes-playlist $1
}

# Convert all images in a folder to png
function convert_to_png() {
	# Convert the thumbnail extensions to .png
	# ls | awk '!/mp3/ {print}' | awk '!/png/ {print}' | while read file; do
	# 	if [[ -f $file ]]; then
	# 		name="$(echo $file | sed 's/\.[^.]*$//').png"
	# 		name=$(echo "$name" | xargs -0)
	# 		file=$(echo "$file" | xargs -0)
	# 		echo "$name"
	# 		ffmpeg -y -i "$file" "$name"
	# 		rm "$file"
	# 	fi
	# done

	webp_exists=$(ls *.webp 2> /dev/null | wc -l)
	if [ $webp_exists != 0 ]; then
		for i in *.webp; do	
			ffmpeg -y -i "${i}" "${i%.webp}.png"
			echo "REMOVING ${i}"
			rm "${i}"
		done
	fi

	jpg_exists=$(ls *.jpg 2> /dev/null | wc -l)
	if [ $jpg_exists != 0 ]; then
		for i in *.jpg; do	
			ffmpeg -y -i "${i}" "${i%.jpg}.png"
			echo "REMOVING ${i}"
			rm "${i}"
		done
	fi
}

# Merge song, art cover, and set title, artist, and album
function bake_song() {
	# Bake the song
	for i in *.mp3; do
		name=$(echo "${i%.*}")

		# Generating artist and title from name
		if [[ $name == *"-"* ]]; then
			title=$(echo $name | cut -f 2 -d "-" | cut -f 1 -d "(" | cut -f 1 -d "[" | xargs -0)
			if [[ $artist == "" ]]; then
				artist=$(echo $name | cut -f 1 -d "-" | xargs -0)
			fi
		else
			title=$(echo $name | cut -f 1 -d "(" | cut -f 1 -d "[" | xargs -0)
			if [[ $artist == "" ]]; then
				artist=$title
			fi
		fi

		new_name="$artist-$title"
		new_name=${new_name// /-}

		echo "---------------------------------------"
		echo "$name"
		echo "$new_name"
		echo "$artist"
		echo "$title"
		echo "---------------------------------------"

		mv "$name.mp3" in.mp3
		mv "$name.png" in.png

		# Converting the mp3 and png to a single file with the new name and title and artist
		ffmpeg -y -i in.mp3 -i in.png -map 0:0 -map 1:0 -c copy -id3v2_version 3 -metadata title="$title" -metadata artist="$artist" -metadata album="$album" $new_name.mp3

		rm in.mp3
		rm in.png
	done

  mv ./* ..
  cd ..
  rm -r $temp
}

# Changes the album cover for all songs
function change_album_cover() {
	for i in *.mp3; do
		ffmpeg -y -i "$i" -i "album-art.png" -map 0:0 -map 1:0 -c copy -id3v2_version 3 a.mp3 && mv a.mp3 "$i"

		# $1: New metadata
		# ffmpeg -y -i "$i" -i "album-art.png" -map 0:0 -map 1:0 -c copy -id3v2_version 3 -metadata album="$1" a.mp3 && mv a.mp3 "$i"
	done
}

download $playlist
convert_to_png
bake_song
# change_album_cover "$album"
