(defwidget rightside []
    (box :orientation "h" :space-evenly false :halign "end"
        (eventbox
            :class {'widget ' + (volume.text == 0 ? "disabled" : "")}
            :width 80
            :onclick "$HOME/.local/bin/volume --toggle"
            :onscroll "[ \"{}\" = \"up\" ] && $HOME/.local/bin/volume --inc || $HOME/.local/bin/volume --dec"
            (box :class "audio" :orientation "h" :space-evenly false :spacing 8 :halign "center"
                (label :text {volume.text + "%"})
                (label :text "" :class {'volume vol-' + volume.class})
            )
        )
        (button
          :class {'widget ' + (mic.text == 0 ? "disabled" : "")}
          :css "button {padding: 0px 20px;}"
          :timeout "2m"
          :onclick "$HOME/.local/bin/volume --toggle-mic"
          :onrightclick "pavucontrol"
          {mic.icon}
        )
        (button 
          :class {'widget wifi wifi-' + network.class + ' ' + (network.status == "disconnected" ? "disabled" : "")}
          :timeout "2m"
          :onclick "../scripts/toggle.sh wifi"
          :onrightclick "$HOME/.local/bin/launch-in-terminal nmtui"
          ""
        )
        (button
          :class {'widget ' + (bluetooth.powered == 0 ? "disabled" : "")}
          :css "button {padding: 0px 20px;}"
          :timeout "2m"
          :onclick "../scripts/toggle.sh bluetooth"
          :onrightclick "$HOME/.local/bin/launch-in-terminal bluetuith"
          {bluetooth.icon}
        )
        (button
          :class {'widget battery ' + battery.status}
          :onclick "../scripts/toggle.sh battery"
          {battery.icon}
        )
        (button
          :class "widget"
          :onclick "../scripts/toggle.sh time_cal"
          time
        )
        (button
          :tooltip "Power"
          :class "widget"
          :css "button {padding: 0px 20px 0px 15px;}"
          :timeout "2m"
          :onrightclick "rofi -show drun"
          :onclick "../scripts/toggle_control.sh"          
          "ïŒƒ"
        )
    )
)
